#ifndef __STM32F4XX_NUCLEO_BLUENRG_H
#define __STM32F4XX_NUCLEO_BLUENRG_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stm32f7xx_hal.h>

// SPI Instance
#define BNRG_SPI_INSTANCE SPI2
#define BNRG_SPI_CLK_ENABLE() __SPI2_CLK_ENABLE ()

// SPI Configuration
#define BNRG_SPI_MODE SPI_MODE_MASTER
#define BNRG_SPI_DIRECTION SPI_DIRECTION_2LINES
#define BNRG_SPI_DATASIZE SPI_DATASIZE_8BIT
#define BNRG_SPI_CLKPOLARITY SPI_POLARITY_LOW
#define BNRG_SPI_CLKPHASE SPI_PHASE_1EDGE
#define BNRG_SPI_NSS SPI_NSS_SOFT
#define BNRG_SPI_FIRSTBIT SPI_FIRSTBIT_MSB
#define BNRG_SPI_TIMODE SPI_TIMODE_DISABLED
#define BNRG_SPI_CRCPOLYNOMIAL 7
#define BNRG_SPI_BAUDRATEPRESCALER SPI_BAUDRATEPRESCALER_128
#define BNRG_SPI_CRCCALCULATION SPI_CRCCALCULATION_DISABLED

// SPI Reset Pin
#define BNRG_SPI_RESET_PIN GPIO_PIN_3
#define BNRG_SPI_RESET_MODE GPIO_MODE_OUTPUT_PP
#define BNRG_SPI_RESET_PULL GPIO_PULLUP
#define BNRG_SPI_RESET_SPEED GPIO_SPEED_LOW
#define BNRG_SPI_RESET_ALTERNATE 0
#define BNRG_SPI_RESET_PORT GPIOI
#define BNRG_SPI_RESET_CLK_ENABLE() __GPIOI_CLK_ENABLE ()

// SCLK
#define BNRG_SPI_SCLK_PIN GPIO_PIN_1
#define BNRG_SPI_SCLK_MODE GPIO_MODE_AF_PP
#define BNRG_SPI_SCLK_PULL GPIO_PULLDOWN
#define BNRG_SPI_SCLK_SPEED GPIO_SPEED_HIGH
#define BNRG_SPI_SCLK_ALTERNATE GPIO_AF5_SPI2
#define BNRG_SPI_SCLK_PORT GPIOI
#define BNRG_SPI_SCLK_CLK_ENABLE() __GPIOI_CLK_ENABLE ()

// MISO (Master Input Slave Output)
#define BNRG_SPI_MISO_PIN GPIO_PIN_14
#define BNRG_SPI_MISO_MODE GPIO_MODE_AF_PP
#define BNRG_SPI_MISO_PULL GPIO_NOPULL
#define BNRG_SPI_MISO_SPEED GPIO_SPEED_HIGH
#define BNRG_SPI_MISO_ALTERNATE GPIO_AF5_SPI2
#define BNRG_SPI_MISO_PORT GPIOB
#define BNRG_SPI_MISO_CLK_ENABLE() __GPIOB_CLK_ENABLE ()

// MOSI (Master Output Slave Input)
#define BNRG_SPI_MOSI_PIN GPIO_PIN_15
#define BNRG_SPI_MOSI_MODE GPIO_MODE_AF_PP
#define BNRG_SPI_MOSI_PULL GPIO_NOPULL
#define BNRG_SPI_MOSI_SPEED GPIO_SPEED_HIGH
#define BNRG_SPI_MOSI_ALTERNATE GPIO_AF5_SPI2
#define BNRG_SPI_MOSI_PORT GPIOB
#define BNRG_SPI_MOSI_CLK_ENABLE() __GPIOB_CLK_ENABLE ()

// NSS/CSN/CS
#define BNRG_SPI_CS_PIN GPIO_PIN_10
#define BNRG_SPI_CS_MODE GPIO_MODE_OUTPUT_PP
#define BNRG_SPI_CS_PULL GPIO_PULLUP
#define BNRG_SPI_CS_SPEED GPIO_SPEED_HIGH
#define BNRG_SPI_CS_ALTERNATE 0
#define BNRG_SPI_CS_PORT GPIOF
#define BNRG_SPI_CS_CLK_ENABLE() __GPIOF_CLK_ENABLE ()

// IRQ
#define BNRG_SPI_IRQ_PIN GPIO_PIN_0
#define BNRG_SPI_IRQ_MODE GPIO_MODE_IT_RISING
#define BNRG_SPI_IRQ_PULL GPIO_PULLDOWN
#define BNRG_SPI_IRQ_SPEED GPIO_SPEED_HIGH
#define BNRG_SPI_IRQ_ALTERNATE 0
#define BNRG_SPI_IRQ_PORT GPIOA
#define BNRG_SPI_IRQ_CLK_ENABLE() __GPIOA_CLK_ENABLE ()

// EXTI External Interrupt for SPI
// NOTE: if you change the IRQ pin remember to implement a corresponding handler
// function like EXTI0_IRQHandler() in the user project
#define BNRG_SPI_EXTI_IRQn EXTI0_IRQn
#define BNRG_SPI_EXTI_IRQHandler EXTI0_IRQHandler
#define BNRG_SPI_EXTI_PIN BNRG_SPI_IRQ_PIN
#define BNRG_SPI_EXTI_PORT BNRG_SPI_IRQ_PORT
#define RTC_WAKEUP_IRQHandler RTC_WKUP_IRQHandler

// EXTI External Interrupt for user button
//#define PUSH_BUTTON_EXTI_IRQHandler EXTI15_10_IRQHandler

void Enable_SPI_IRQ (void);
void Disable_SPI_IRQ (void);
void Clear_SPI_IRQ (void);
void Clear_SPI_EXTI_Flag (void);

#ifdef __cplusplus
}
#endif

#endif /* __STM32F4XX_NUCLEO_BLUENRG_H */
